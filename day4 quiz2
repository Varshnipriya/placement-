1)
  #include <stdio.h>
int secondLargestDistinct(int arr[], int n) {
    int firstLargest = -1, secondLargest = -1;

    for (int i = 0; i < n; i++) {
        if (arr[i] > firstLargest) {
            secondLargest = firstLargest;
            firstLargest = arr[i];
        } else if (arr[i] > secondLargest && arr[i] != firstLargest) {
            secondLargest = arr[i];
        }
    }

    return secondLargest;
}

int main() {
    int N;
    printf("Enter the size of the array: ");
    scanf("%d", &N);
    int Arr[N];
    printf("Enter the elements of the array:\n");
    for (int i = 0; i < N; i++) {
        scanf("%d", &Arr[i]);
    }
    int result = secondLargestDistinct(Arr, N);
    printf("The second largest distinct element is: %d\n", result);
    return 0;
}
2)
  #include <stdio.h>
int hasPairWithSum(int arr[], int n, int X) {
    int present[X + 1];
    for (int i = 0; i <= X; i++) {
        present[i] = 0;
    }

    for (int i = 0; i < n; i++) {
        // Check if (X - arr[i]) is present in the array
        if (present[X - arr[i]]) {
            return 1; // Pair found
        }
        present[arr[i]] = 1;
    }
    return 0; // Pair not found
}

int main() {
    int N, X;
    printf("Enter the size of the array: ");
    scanf("%d", &N);
    int Arr[N];
    printf("Enter the elements of the array:\n");
    for (int i = 0; i < N; i++) {
        scanf("%d", &Arr[i]);
    }
    printf("Enter the value of X: ");
    scanf("%d", &X);
    int result = hasPairWithSum(Arr, N, X);
    if (result) {
        printf("Yes, there exist two elements whose sum is %d\n", X);
    } else {
        printf("No, there are no two elements whose sum is %d\n", X);
    }

    return 0;
}
3)
  #include <stdio.h>
int firstOccurrence(int arr[], int n, int x) {
    int low = 0, high = n - 1, result = -1;

    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] == x) {
            result = mid;
            high = mid - 1; 
        } else if (arr[mid] < x) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    return result;
}
int lastOccurrence(int arr[], int n, int x) {
    int low = 0, high = n - 1, result = -1;

    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] == x) {
            result = mid;
            low = mid + 1; 
        } else if (arr[mid] < x) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    return result;
}

int main() {
    int n, x;
    printf("Enter the size of the array: ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter the elements of the array:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    printf("Enter the value of x: ");
    scanf("%d", &x);
    int first = firstOccurrence(arr, n, x);
    int last = lastOccurrence(arr, n, x);
    if (first != -1 && last != -1) {
        printf("First occurrence of %d is at index %d and last occurrence is at index %d\n", x, first, last);
    } else {
        printf("%d not found in the array\n", x);
    }

    return 0;
}
